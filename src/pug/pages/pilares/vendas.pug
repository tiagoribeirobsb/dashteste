extends ../../layouts/LayoutTheme

block content
  +overrideStyles

block mainContent
  if ENV === 'PROD'
    +LayoutContentProd
  else
    +LayoutContent

  // --------- CONTEÚDO DA PÁGINA ---------
  .content
    .container-fluid
      h3.mb-3 Vendas & Comercial
      .alert.alert-info.mb-3 Esta seção faz parte dos 5 Pilares do IA Bridge. Os cards/embeds Metabase serão adicionados depois.

      // Card 1 — Consolidado + filtros + linha/barra
      .row.g-3
        .col-12
          .card.h-100(
            data-widget="kpi-sales-daily"
            data-tenant="default"
            data-supabase-url="https://fetixpcyiolwzqalaauw.supabase.co"
            data-supabase-key="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZldGl4cGN5aW9sd3pxYWxhYXV3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY3ODA1NTAsImV4cCI6MjA3MjM1NjU1MH0.9q3cBJ8kKI4V88XzyZBKzSAagyLf-35hIHNB1Bk0ZeU"
          )
            //- TODO: preencher data-supabase-url e data-supabase-key com os do projeto
            .card-header.d-flex.align-items-center
              h5.mb-0 Dados Consolidados
              .d-flex.align-items-center.gap-2.ms-auto
                select.form-select.form-select-sm.w-auto#tenant-select
                  option(value="default") Default
                  option(value="copaderma") Copaderma
                .btn-group
                  button.btn.btn-outline-secondary.btn-sm(type="button" data-days="15") 15d
                  button.btn.btn-outline-secondary.btn-sm.active(type="button" data-days="30") 30d
                  button.btn.btn-outline-secondary.btn-sm(type="button" data-days="60") 60d
                  button.btn.btn-outline-secondary.btn-sm(type="button" data-days="90") 90d
                  button.btn.btn-outline-secondary.btn-sm(type="button" data-days="120") 120d
                  button.btn.btn-outline-secondary.btn-sm(type="button" data-days="360") 360d
            .card-body
              .row.g-3
                .col-12.col-md-6.col-xl-3
                  .card.h-100
                    .card-body.text-center
                      h6.mb-1.text-500.fw-semibold.text-uppercase Período
                      .kpi-value.fs-6.text-600.text-nowrap.kpi-periodo#kpi-periodo --/--
                .col-12.col-md-6.col-xl-3
                  .card.h-100
                    .card-body.text-center
                      h6.mb-1.text-500.fw-semibold.text-uppercase Total de vendas
                      .kpi-value.fs-2.fw-semibold.text-nowrap#kpi-vendas R$ 0,00
                .col-12.col-md-6.col-xl-3
                  .card.h-100
                    .card-body.text-center
                      h6.mb-1.text-500.fw-semibold.text-uppercase Total de pedidos
                      .kpi-value.fs-2.fw-semibold.text-nowrap#kpi-pedidos 0
                .col-12.col-md-6.col-xl-3
                  .card.h-100
                    .card-body.text-center
                      h6.mb-1.text-500.fw-semibold.text-uppercase Ticket médio
                      .kpi-value.fs-2.fw-semibold.text-nowrap#kpi-ticket R$ 0,00
              .mt-3
                .ratio.ratio-21x9
                  canvas#chart-revenue

      // Linha 2 — Status 14d e Top 20 (30d)
      .row.g-3
        .col-12.col-lg-6
          .card.h-100(data-widget="kpi-status-14d")
            .card-header.d-flex.align-items-center
              h5.mb-0 Status dos pedidos — últimos 14d
            .card-body
              .ratio.ratio-21x9
                canvas#chart-status-14d
              .mt-2.small.text-600#status-14d-msg Carregando…

        .col-12.col-lg-6
          .card.h-100(data-widget="kpi-top20-30d")
            .card-header.d-flex.align-items-center
              h5.mb-0 Top 20 clientes — últimos 30d
            .card-body
              .ratio.ratio-21x9
                canvas#chart-top20
              .mt-2.small.text-600#top20-msg Carregando…

      // Linha 3 — Metas MTD (atingimento)
      .row.g-3.mt-3
        .col-12
          .card.h-100(
            data-widget="mtd-goals"
            data-tenant="default"
          )
            .card-header
              h5.mb-0 Metas MTD (atingimento)
            .card-body
              .row.g-3
                .col-12.col-md-6
                  .card.h-100
                    .card-body
                      h6.mb-1.text-500.fw-semibold.text-uppercase Meta atual
                      .progress.mb-2
                        .progress-bar#bar-mtd(role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100")
                      .d-flex.justify-content-between
                        span.kpi-value.text-nowrap#txt-mtd-val R$ 0,00
                        span.fw-semibold#txt-mtd-pct 0%
                .col-12.col-md-6
                  .card.h-100
                    .card-body
                      h6.mb-1.text-500.fw-semibold.text-uppercase Meta anterior
                      .progress.mb-2
                        .progress-bar.bg-secondary#bar-prev(role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100")
                      .d-flex.justify-content-between
                        span.kpi-value.text-nowrap#txt-prev-val R$ 0,00
                        span.fw-semibold#txt-prev-pct 0%

append scripts
  //- lógica da página (Chart.js já incluído no LayoutTheme.pug)
  script.
    (function(){
      const HOST = document.querySelector('[data-widget="kpi-sales-daily"]');
      if (!HOST || !window.supabase) return;

      // Singleton global (reutiliza se já existir)
      window.__sb = window.__sb ?? supabase.createClient(
        HOST.dataset.supabaseUrl,
        HOST.dataset.supabaseKey,
        {
          db: { schema: 'api' },
          // Sem sessão: não usa localStorage, nem auto-refresh → some o warning
          auth: { persistSession: false, autoRefreshToken: false, detectSessionInUrl: false },
          global: { headers: { apikey: HOST.dataset.supabaseKey } }
        }
      );
    })();

    (function(){
      const HOST=document.querySelector('[data-widget="kpi-sales-daily"]');
      if(!HOST||!window.supabase||!window.Chart) return;
      const sb = window.__sb;
      
      // Função para obter tenant (da URL ou data-attribute)
      function getTenant(host) {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get('tenant') || host.dataset.tenant || 'default';
      }
      
      const TEN = getTenant(HOST);
      // Helpers de formatação
      const fmtBRL = v => new Intl.NumberFormat('pt-BR', {
        style: 'currency',
        currency: 'BRL',
        maximumFractionDigits: 2
      }).format(+v || 0);

      const fmtInt = n => new Intl.NumberFormat('pt-BR').format(+n || 0);

      const fmtDate = s => {
        const d = new Date(s);
        return d.toLocaleDateString('pt-BR', { timeZone: 'UTC' });
      };
      
      const BRL=new Intl.NumberFormat('pt-BR',{style:'currency',currency:'BRL'});
      const INT=new Intl.NumberFormat('pt-BR',{maximumFractionDigits:0});
      const iso=d=>d.toISOString().slice(0,10), br=s=>{const [y,m,d]=s.split('-');return d+'/'+m+'/'+y};
      
      // Inicializar seletor de tenant
      (function initTenantSelect(){
        const sel = document.getElementById('tenant-select');
        if(!sel) return;
        // Preseleciona pelo ?tenant=... (ou data-tenant)
        const cur = getTenant(HOST);
        if ([...sel.options].some(o => o.value === cur)) sel.value = cur;
        sel.addEventListener('change', () => {
          const url = new URL(location.href);
          url.searchParams.set('tenant', sel.value);
          location.href = url.toString(); // recarrega já filtrando
        });
      })();

      let chRevenue,chStatus,chTop;

      // --- CONSOLIDADO ---
      (function(){
        const el={periodo:ID('kpi-periodo'),vendas:ID('kpi-vendas'),pedidos:ID('kpi-pedidos'),ticket:ID('kpi-ticket'),
                  btns:HOST.querySelectorAll('[data-days]'), canvas:ID('chart-revenue')};
        let days=30;
        el.btns.forEach(b=>b.onclick=()=>{el.btns.forEach(x=>x.classList.remove('active'));b.classList.add('active');days=+b.dataset.days;load()});
        async function load(){
          const t=new Date(), f=new Date(); f.setDate(t.getDate()-days+1);
          const {data,error}=await sb.from('sales_daily_upload')
            .select('sale_date,total_orders,revenue')
            .eq('tenant_id',TEN).gte('sale_date',iso(f)).lte('sale_date',iso(t))
            .order('sale_date',{ascending:true});
          if(error){console.error(error);return}
          const labels=data.map(r=>br(r.sale_date)), rev=data.map(r=>+r.revenue||0), ord=data.map(r=>+r.total_orders||0);
          const S=a=>a.reduce((s,v)=>s+v,0), sumRev=S(rev), sumOrd=S(ord);
          el.periodo.textContent=labels.length?`${fmtDate(iso(f))} — ${fmtDate(iso(t))}`:'--/--';
          el.vendas.textContent=BRL.format(sumRev);
          el.pedidos.textContent=INT.format(sumOrd);
          el.ticket.textContent=BRL.format(sumOrd?sumRev/sumOrd:0);
          const cfg={data:{labels,datasets:[
              {type:'line',label:'Receita',data:rev,tension:.3,yAxisID:'y1'},
              {type:'bar',label:'Pedidos',data:ord,yAxisID:'y2'}
            ]},
            options:{responsive:true,maintainAspectRatio:false,interaction:{mode:'index',intersect:false},
              scales:{y1:{position:'left',ticks:{callback:v=>BRL.format(v)}},
                      y2:{position:'right',grid:{drawOnChartArea:false}}}}};
          if(chRevenue){chRevenue.data=cfg.data; chRevenue.update()}
          else{chRevenue=new Chart(el.canvas.getContext('2d'),{type:'bar',...cfg})}
        }
        load();
      })();

      // --- STATUS 14d ---
      (async function(){
        const msg=ID('status-14d-msg'), cv=ID('chart-status-14d');
        try{
          const t=new Date(), f=new Date(); f.setDate(t.getDate()-13);
          let r=await sb.from('vw_sales_status_mix_upload').select('*')
            .eq('tenant_id',TEN).gte('sale_date',iso(f)).lte('sale_date',iso(t));
          if(r.error) r=await sb.from('sales_status_mix_upload').select('*')
            .eq('tenant_id',TEN).gte('sale_date',iso(f)).lte('sale_date',iso(t));
          if(r.error) throw r.error;
          const rows=r.data||[]; if(!rows.length){msg.textContent='Sem dados.';return}
          const k=Object.keys(rows[0]), tot={};
          if(k.includes('status')){
            const q=['orders','total_orders','qtd','qtde','count'].find(x=>k.includes(x))||'orders';
            rows.forEach(a=>{const s=String(a.status||'').toUpperCase(); tot[s]=(tot[s]||0)+(+a[q]||0)})
          }else{
            const date=['sale_date','ref_date','day','date'].find(x=>k.includes(x))||'sale_date';
            const ign=new Set(['tenant_id',date,'updated_at','id']);
            k.filter(x=>!ign.has(x)).forEach(c=>{tot[String(c).toUpperCase()]=rows.reduce((s,a)=>s+(+a[c]||0),0)})
          }
          const L=Object.keys(tot), D=L.map(x=>tot[x]), cfg={type:'doughnut',data:{labels:L,datasets:[{data:D}]},
            options:{responsive:true,maintainAspectRatio:false,plugins:{legend:{position:'bottom'}}}};
          if(chStatus){chStatus.data=cfg.data; chStatus.update()}
          else{chStatus=new Chart(cv.getContext('2d'),cfg)}
          msg.textContent=`${br(iso(f))} a ${br(iso(t))}`;
        }catch(e){console.error(e); msg.textContent='Erro ao carregar.'}
      })();

      // --- TOP 20 (30d) ---
      (async function(){
        const msg=ID('top20-msg'), cv=ID('chart-top20');
        try{
          const t=new Date(), f=new Date(); f.setDate(t.getDate()-29);
          let r=await sb.from('vw_top_customers_upload').select('*')
            .eq('tenant_id',TEN).gte('sale_date',iso(f)).lte('sale_date',iso(t)).limit(5000);
          if(r.error) r=await sb.from('top_customers_upload').select('*')
            .eq('tenant_id',TEN).gte('sale_date',iso(f)).lte('sale_date',iso(t)).limit(5000);
          if(r.error) throw r.error;
          const rows=r.data||[]; if(!rows.length){msg.textContent='Sem dados.';return}
          const k=Object.keys(rows[0]),
                name=['customer','client','cliente','name','nome','razao','razao_social'].find(x=>k.includes(x))||'cliente',
                rev=['revenue','faturamento','amount','valor','total','total_revenue'].find(x=>k.includes(x))||'revenue';
          const map=new Map();
          rows.forEach(a=>{const n=String(a[name]||'—').trim(), cur=map.get(n)||{rv:0}; cur.rv+=(+a[rev]||0); map.set(n,cur)});
          const top=[...map.entries()].map(([n,v])=>({n,rv:v.rv})).sort((a,b)=>b.rv-a.rv).slice(0,20);
          const L=top.map(x=>x.n), D=top.map(x=>x.rv), cfg={type:'bar',data:{labels:L,datasets:[{label:'Receita',data:D}]},
            options:{indexAxis:'y',responsive:true,maintainAspectRatio:false,
              plugins:{legend:{display:false},tooltip:{callbacks:{label:c=>BRL.format(c.parsed.x)}}},
              scales:{x:{ticks:{callback:v=>BRL.format(v)}}}}}
          if(chTop){chTop.data=cfg.data; chTop.update()}
          else{chTop=new Chart(cv.getContext('2d'),cfg)}
          msg.textContent=`Período ${br(iso(f))} a ${br(iso(t))}`;
        }catch(e){console.error(e); msg.textContent='Erro ao carregar.'}
      })();

      // --- METAS MTD ---
      (async function(){
        const bar=ID('bar-mtd'), txt=ID('txt-mtd-val'), pct=ID('txt-mtd-pct'),
              barP=ID('bar-prev'), txtP=ID('txt-prev-val'), pctP=ID('txt-prev-pct');
        try{
          const t=new Date(), f1=new Date(t.getFullYear(),t.getMonth(),1),
                pf=new Date(t.getFullYear(),t.getMonth()-1,1), pl=new Date(t.getFullYear(),t.getMonth(),0);
          const Q=async(F,T)=>{const {data,e}=await sb.from('vw_goals_mtd').select('day,target,actual').eq('tenant',TEN).gte('day',iso(F)).lte('day',iso(T)); if(e)throw e; return data};
          const now=await Q(f1,t), prev=await Q(pf,pl), S=(a,k)=>a.reduce((s,x)=>s+(+x[k]||0),0);
          const tgt=S(now,'target'), act=S(now,'actual'), p=tgt>0?100*act/tgt:0;
          bar.style.width=Math.min(100,p).toFixed(0)+'%'; txt.textContent=`${BRL.format(act)} / ${BRL.format(tgt)}`; pct.textContent=p.toFixed(1).replace('.',',')+'%';
          const tgt2=S(prev,'target'), act2=S(prev,'actual'), p2=tgt2>0?100*act2/tgt2:0;
          barP.style.width=Math.min(100,p2).toFixed(0)+'%'; txtP.textContent=`${BRL.format(act2)} / ${BRL.format(tgt2)}`; pctP.textContent=p2.toFixed(1).replace('.',',')+'%';
          // Metas atualizadas com sucesso
        }catch(e){console.error(e); console.log('Erro ao carregar metas.')}
      })();

      function ID(x){return document.getElementById(x)}
    })();
